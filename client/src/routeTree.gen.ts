/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const AuthenticatedIndexLazyImport = createFileRoute('/_authenticated/')()
const AuthenticatedProductIndexLazyImport = createFileRoute(
  '/_authenticated/product/',
)()
const AuthenticatedProductCreateLazyImport = createFileRoute(
  '/_authenticated/product/create',
)()
const AuthenticatedProductIdLazyImport = createFileRoute(
  '/_authenticated/product/$id',
)()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/index.lazy').then((d) => d.Route),
)

const AuthenticatedProductIndexLazyRoute =
  AuthenticatedProductIndexLazyImport.update({
    path: '/product/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/product/index.lazy').then((d) => d.Route),
  )

const AuthenticatedProductCreateLazyRoute =
  AuthenticatedProductCreateLazyImport.update({
    path: '/product/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/product/create.lazy').then((d) => d.Route),
  )

const AuthenticatedProductIdLazyRoute = AuthenticatedProductIdLazyImport.update(
  {
    path: '/product/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/product/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      preLoaderRoute: typeof AuthenticatedIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/product/$id': {
      preLoaderRoute: typeof AuthenticatedProductIdLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/product/create': {
      preLoaderRoute: typeof AuthenticatedProductCreateLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/product/': {
      preLoaderRoute: typeof AuthenticatedProductIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthenticatedRoute.addChildren([
    AuthenticatedIndexLazyRoute,
    AuthenticatedProductIdLazyRoute,
    AuthenticatedProductCreateLazyRoute,
    AuthenticatedProductIndexLazyRoute,
  ]),
  LoginLazyRoute,
  RegisterLazyRoute,
])

/* prettier-ignore-end */
